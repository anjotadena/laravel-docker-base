version: '3.8'

networks:
    app:
        name: app

services:
    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: php
        volumes:
            - ./src:/var/www/html:delegated
        depends_on:
            - mysql
        networks:
            - app
    
    mysql:
        image: mysql:8.0.28
        container_name: mysql
        environment:
            MYSQL_DATABASE: appdb
            MYSQL_USER: user
            MYSQL_PASSWORD: secret
            MYSQL_ROOT_PASSWORD: secret
        networks:
            - app
        ports:
            - 4306:3306
        volumes:
            - ./.mysqldata:/var/lib/mysql
            # - ./docker/mysql/log:/var/log/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        # Fix mbind error
        # This is could be a initial fix for now, this might disable the mysql security features
        # https://thegeekbin.com/mbind-operation-not-permitted-docker-mysql/
        security_opt:
            - seccomp:unconfined
    
    nginx:
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        container_name: nginx
        depends_on:
            - php
            - mysql
            - redis
        networks:
            - app
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./src:/var/www/html:delegated
    
    # apache:
    #     build:
    #         context: .
    #         dockerfile: apache.dockerfile
    #     container_name: apache
    #     networks:
    #         - app
    #     ports:
    #         - 80:80
    #         - 443:443            
    #     volumes:
    #         - ./src:/var/www/html

    composer:
        image: composer:latest
        container_name: composer
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        networks:
            - app

    artisan:
        user: 1000:1000
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: artisan
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ["php", "artisan"]
        networks:
            - app

    npm:
        image: node:17.5.0
        container_name: npm
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ["npm"]
        networks:
            - app

    phpunit:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: phpunit
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ["/var/www/html/vendor/bin/phpunit", "--configuration=/var/www/html/phpunit.xml"]
        networks:
            - app

    redis:
        image: redis:latest
        container_name: redis
        ports:
            - 6379:6379
        networks:
            - app

    scheduler:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: scheduler
        volumes:
            - ./src:/var/www/html
        working_dir: /var/www/html
        entrypoint: ["php", "artisan", "schedule:work"]
        networks:
            - app

    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
